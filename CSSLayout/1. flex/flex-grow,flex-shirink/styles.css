/* flex-grow, flex-shirink는 child에게 줄 수 있는 property */
/* flex-shirink는 기본적으로 element의 행동을 정의한다(flexbox가 쥐어짜질 때 */

/* flex-basis는 child에서 적용되는 poroperty이다 */
/* child요소의 처음 사이즈를 결정 지어 주지만 flex-shirink, flex-grow에 의해 변경된다. */
/* 기본적으로 flex-direction의 방향에 따라간다(언제나 width를 정하진 않는다, flex-direction: column;일때는 height를 따른다) */
/* 부모 요소에 hieght가 있으면 %로 표현 할 수 있다. */
/* 하지만 보통 flex-basis보다는 width를 많이 쓰긴 한다. */
/* => child에 flex-grow가 하나만 있어도 전체를 꽉 채운다 */

body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
    Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
}

.father {
  display: flex;
  flex-direction: column;
  /* Main Axis */
  justify-content: space-around;
  /* width: 100%; */
  height: 200vh;
}

.child {
  /* width: 300px; */
  flex-basis: 50px;
  /* height: 200px; */
  background: peru;
  color: white;
  font-size: 50px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.child:nth-child(2) {
  background: #000;
  /* flex-shrink(수축): 1; 가 shirink의 기본값이다. */
  /* flex-shrink: 2;면 child의 whidth보다 작아 질때 2배로 작아진다(flex-wrap: nowrap 기본값 기준일 때) */
  flex-shrink: 2;
  /* flex-grow는 shrink와 반대로 해당 요소의 width가 주어져있을때 그 크기보다 커지는 경우 가질 수 이있는 모든 공간을 비율적으로 차지한다. */
  /* 기본값은 flex-grow: 0;은 늘어났을때 width만 차지하고 다른 양수일 경우 넣어준 값의 배율로 차지한다. */
  /* 기본값은 flex-grow: 0; 이다. 보통 0과 1만 사용하지만 다른 숫자를 넣어도 1과 동일한 기능을 갖는다. */
  flex-grow: 1;
}

.child.child:nth-child(3) {
  flex-grow: 0;
}
